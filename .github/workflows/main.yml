name: üöÄ MELSU Portal Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

env:
  PROJECT_PATH: "/var/www/melsu"
  BACKEND_PATH: "/var/www/melsu/backend"
  FRONTEND_PATH: "/var/www/melsu/frontend"

jobs:
  deploy:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: üîÑ Deploy to Production Server
    
    steps:
    - name: üìù Checkout code
      uses: actions/checkout@v4
      
    - name: üöÄ Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          set -e
          
          echo "üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ MELSU Portal..."
          
          # ====================
          # 1. –ü–û–î–ì–û–¢–û–í–ö–ê
          # ====================
          echo "üìã –≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞..."
          
          cd ${{ env.PROJECT_PATH }}
          
          # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î
          echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î..."
          sudo mkdir -p /var/backups/melsu
          BACKUP_FILE="/var/backups/melsu/backup_$(date +%Y%m%d_%H%M%S).sql"
          sudo -u postgres pg_dump melsu_db > "$BACKUP_FILE" 2>/dev/null || echo "–ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
          
          # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
          echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
          sudo chown -R melsu:melsu ${{ env.PROJECT_PATH }} || {
            echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è melsu..."
            sudo useradd -m -s /bin/bash melsu || true
            sudo chown -R melsu:melsu ${{ env.PROJECT_PATH }}
          }
          
          # ====================
          # 2. –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–î–ê
          # ====================
          echo "üì¶ –≠—Ç–∞–ø 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sudo systemctl stop melsu-api melsu-worker || true
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
          echo "‚¨áÔ∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
          git stash --include-untracked || true
          git fetch origin main || {
            echo "–ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
            git remote set-url origin https://github.com/sanumxxx/melsu_portal.git
            git fetch origin main
          }
          git reset --hard origin/main
          
          # ====================
          # 3. BACKEND
          # ====================
          echo "üêç –≠—Ç–∞–ø 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Backend..."
          
          cd ${{ env.BACKEND_PATH }}
          
          # –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
          if [ ! -d "venv" ]; then
            echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            sudo -u melsu python3 -m venv venv
          fi
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          sudo -u melsu venv/bin/pip install --upgrade pip
          sudo -u melsu venv/bin/pip install -r requirements.txt
          
          # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
          echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ head —Ä–µ–≤–∏–∑–∏–π
          HEADS_COUNT=$(sudo -u melsu venv/bin/alembic heads 2>/dev/null | grep -c "^[a-f0-9]\{12\}" || echo "0")
          
          if [ "$HEADS_COUNT" -gt 1 ]; then
            echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π: $HEADS_COUNT heads. –ò—Å–ø—Ä–∞–≤–ª—è—é..."
            sudo -u melsu venv/bin/alembic merge heads -m "Auto merge conflicts" || true
          fi
          
          # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
          sudo -u melsu venv/bin/alembic upgrade head || {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π, –ø—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ departments
            DB_CHECK=$(sudo -u postgres psql melsu_db -c "SELECT to_regclass('departments');" -t 2>/dev/null | tr -d ' ')
            
            if [ "$DB_CHECK" = "departments" ]; then
              echo "üîß –¢–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–µ–≤–∏–∑–∏—é..."
              
              # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ä–µ–≤–∏–∑–∏—é
              LATEST_REV=$(ls -1 alembic/versions/*.py | tail -1 | grep -o '[a-f0-9]\{12\}' | head -1)
              if [ -n "$LATEST_REV" ]; then
                echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ä–µ–≤–∏–∑–∏—é: $LATEST_REV"
                sudo -u melsu venv/bin/alembic stamp $LATEST_REV
              fi
            else
              echo "üÜï –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î..."
              sudo -u melsu venv/bin/alembic upgrade head
            fi
          }
          
          # ====================
          # 4. FRONTEND
          # ====================
          echo "üåê –≠—Ç–∞–ø 4: –°–±–æ—Ä–∫–∞ Frontend..."
          
          cd ${{ env.FRONTEND_PATH }}
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
          if ! command -v node &> /dev/null || [ "$(node --version | cut -d'v' -f2 | cut -d'.' -f1)" -lt "18" ]; then
            echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js..."
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          sudo -u melsu npm ci || sudo -u melsu npm install
          
          # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
          echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
          sudo -u melsu npm run build
          
          # ====================
          # 5. –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í
          # ====================
          echo "üîÑ –≠—Ç–∞–ø 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sudo systemctl start melsu-api
          sudo systemctl start melsu-worker
          sudo systemctl restart nginx
          
          # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
          sleep 10
          
          # ====================
          # 6. –ü–†–û–í–ï–†–ö–ê
          # ====================
          echo "‚úÖ –≠—Ç–∞–ø 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
          systemctl is-active melsu-api && echo "‚úÖ melsu-api: –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå melsu-api: –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          systemctl is-active melsu-worker && echo "‚úÖ melsu-worker: –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå melsu-worker: –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          systemctl is-active nginx && echo "‚úÖ nginx: –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå nginx: –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
          HEALTH_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health 2>/dev/null || echo "000")
          if [ "$HEALTH_CHECK" = "200" ]; then
            echo "‚úÖ API health check: OK"
          else
            echo "‚ö†Ô∏è  API health check: –∫–æ–¥ $HEALTH_CHECK"
            
            # –ü–æ–ø—ã—Ç–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            echo "üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ API..."
            sudo systemctl restart melsu-api
            sleep 5
            
            HEALTH_CHECK2=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health 2>/dev/null || echo "000")
            if [ "$HEALTH_CHECK2" = "200" ]; then
              echo "‚úÖ API –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
            else
              echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
              exit 1
            fi
          fi
          
          echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
          echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
          echo "   - –ö–æ–º–º–∏—Ç: $(git rev-parse --short HEAD)"
          echo "   - –í—Ä–µ–º—è: $(date)"
          echo "   - –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $BACKUP_FILE"
