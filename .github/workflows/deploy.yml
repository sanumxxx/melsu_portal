name: üöÄ Deploy MELSU Portal

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  PROJECT_PATH: "/var/www/melsu"

jobs:
  deploy:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: üîÑ Deploy to Production Server
    
    steps:
    - name: üìù Checkout code
      uses: actions/checkout@v4
      
    - name: üîß Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
        
    - name: üì¶ Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: üöÄ Deploy to server
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          
          echo "üîÑ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd ${{ env.PROJECT_PATH }}
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
          echo "üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Git:"
          git status --porcelain
          
          # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
          echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î..."
          sudo -u postgres pg_dump melsu_db > /var/backups/melsu/backup_before_deploy_$(date +%Y%m%d_%H%M%S).sql
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–∫–∞—Ç–∞
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "üìå –¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $CURRENT_COMMIT"
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
          echo "‚¨áÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
          git stash
          git fetch origin main
          git reset --hard origin/main
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ requirements.txt
          if git diff --name-only $CURRENT_COMMIT HEAD | grep -q "backend/requirements.txt"; then
            echo "üì¶ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö backend, –æ–±–Ω–æ–≤–ª—è—é..."
            cd backend
            sudo -u melsu venv/bin/pip install -r requirements.txt
            cd ..
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ package.json
          if git diff --name-only $CURRENT_COMMIT HEAD | grep -q "frontend/package.json"; then
            echo "üì¶ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö frontend, –æ–±–Ω–æ–≤–ª—è—é..."
            cd frontend
            sudo -u melsu npm install
            cd ..
          fi
          
          # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
          echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
          cd backend
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
          CURRENT_REV=$(sudo -u melsu venv/bin/alembic current 2>/dev/null | grep -o '[a-f0-9]\{12\}' | head -1)
          HEAD_REV=$(sudo -u melsu venv/bin/alembic heads 2>/dev/null | grep -o '[a-f0-9]\{12\}' | head -1)
          
          if [ "$CURRENT_REV" != "$HEAD_REV" ]; then
            echo "üîÑ –ü—Ä–∏–º–µ–Ω—è—é –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏..."
            sudo -u melsu venv/bin/alembic upgrade head
            
            if [ $? -ne 0 ]; then
              echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π! –û—Ç–∫–∞—Ç—ã–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
              git reset --hard $CURRENT_COMMIT
              exit 1
            fi
          else
            echo "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
          fi
          
          cd ..
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º melsu restart –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
          melsu restart
          
          # –ñ–¥–µ–º, –ø–æ–∫–∞ API –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
          echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API..."
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null; then
              echo "‚úÖ API –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "‚ùå API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥!"
              exit 1
            fi
            sleep 2
          done
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          echo "üß™ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
          API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
          if [ "$API_STATUS" != "200" ]; then
            echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $API_STATUS)"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
          FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/)
          if [ "$FRONTEND_STATUS" != "200" ]; then
            echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $FRONTEND_STATUS)"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
          sudo -u postgres psql melsu_db -c "SELECT 1;" > /dev/null
          if [ $? -ne 0 ]; then
            echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
            exit 1
          fi
          
          echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
          echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$(curl -s ifconfig.me)"
          echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
          systemctl is-active melsu-api && echo "‚úÖ API –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå API –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          systemctl is-active melsu-worker && echo "‚úÖ Worker –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå Worker –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          systemctl is-active nginx && echo "‚úÖ Nginx –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå Nginx –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
          
        EOF
        
    - name: üîî Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!"
        else
          echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏!"
        fi 