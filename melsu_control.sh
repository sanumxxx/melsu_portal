#!/bin/bash

# üöÄ MELSU Portal - –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞–º–∏
# –ê–≤—Ç–æ—Ä: Sasha Honcharov (sanumxxx@yandex.ru)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü—É—Ç–∏
PROJECT_PATH="/var/www/melsu"
BACKEND_PATH="$PROJECT_PATH/backend"
FRONTEND_PATH="$PROJECT_PATH/frontend"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

log_debug() {
    echo -e "${CYAN}[DEBUG]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_status() {
    local service=$1
    if systemctl is-active --quiet $service; then
        echo -e "${GREEN}‚úÖ $service - –∞–∫—Ç–∏–≤–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå $service - –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è API
check_api_health() {
    local response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health 2>/dev/null)
    if [ "$response" = "200" ]; then
        echo -e "${GREEN}‚úÖ API health check - OK${NC}"
    else
        echo -e "${RED}‚ùå API health check - FAILED (–∫–æ–¥: $response)${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
check_database() {
    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    sudo -u postgres psql melsu_db -c "SELECT 1;" > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π
diagnose_migrations() {
    log_step "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    cd $BACKEND_PATH
    
    echo -e "\n${CYAN}=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–ò–ì–†–ê–¶–ò–ô ===${NC}"
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–µ–≤–∏–∑–∏—é
    log_debug "–¢–µ–∫—É—â–∞—è —Ä–µ–≤–∏–∑–∏—è –≤ –ë–î:"
    local current_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic current 2>&1)
    echo "$current_output"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ head —Ä–µ–≤–∏–∑–∏–∏
    log_debug "Head —Ä–µ–≤–∏–∑–∏–∏:"
    local heads_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic heads 2>&1)
    echo "$heads_output"
    
    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ head —Ä–µ–≤–∏–∑–∏–π
    local heads_count=$(echo "$heads_output" | grep -c "^[a-f0-9]\{12\}")
    log_debug "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ head —Ä–µ–≤–∏–∑–∏–π: $heads_count"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π
    log_debug "–ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):"
    sudo -u melsu $BACKEND_PATH/venv/bin/alembic history -r-10: 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
    if [ $heads_count -gt 1 ]; then
        log_warning "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏–≥—Ä–∞—Ü–∏–π: –Ω–∞–π–¥–µ–Ω–æ $heads_count head —Ä–µ–≤–∏–∑–∏–π"
        echo -e "${YELLOW}Head —Ä–µ–≤–∏–∑–∏–∏:${NC}"
        echo "$heads_output" | grep "^[a-f0-9]\{12\}"
        return 1
    elif [ $heads_count -eq 1 ]; then
        log_success "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        return 0
    else
        log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"
        return 2
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
fix_migration_conflicts() {
    log_step "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π..."
    cd $BACKEND_PATH
    
    # –°–Ω–∞—á–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º
    local heads_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic heads 2>&1)
    local heads_count=$(echo "$heads_output" | grep -c "^[a-f0-9]\{12\}")
    
    if [ $heads_count -le 1 ]; then
        log_info "–ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        return 0
    fi
    
    log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $heads_count head —Ä–µ–≤–∏–∑–∏–π. –ò—Å–ø—Ä–∞–≤–ª—è—é..."
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ head —Ä–µ–≤–∏–∑–∏–π
    local heads=$(echo "$heads_output" | grep "^[a-f0-9]\{12\}" | cut -d' ' -f1)
    log_debug "Head —Ä–µ–≤–∏–∑–∏–∏ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: $(echo $heads | tr '\n' ' ')"
    
    # –°–æ–∑–¥–∞–µ–º merge —Ä–µ–≤–∏–∑–∏—é
    log_info "–°–æ–∑–¥–∞—é merge —Ä–µ–≤–∏–∑–∏—é –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è head —Ä–µ–≤–∏–∑–∏–π..."
    local merge_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic merge heads -m "Merge multiple heads - auto-generated by melsu_control" 2>&1)
    
    if [ $? -eq 0 ]; then
        log_success "‚úÖ Merge —Ä–µ–≤–∏–∑–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"
        echo "$merge_output"
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é merge —Ä–µ–≤–∏–∑–∏—é
        log_info "–ü—Ä–∏–º–µ–Ω—è—é merge —Ä–µ–≤–∏–∑–∏—é..."
        sudo -u melsu $BACKEND_PATH/venv/bin/alembic upgrade head
        
        if [ $? -eq 0 ]; then
            log_success "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏–≥—Ä–∞—Ü–∏–π —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
            return 0
        else
            log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ merge —Ä–µ–≤–∏–∑–∏–∏"
            return 1
        fi
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ merge —Ä–µ–≤–∏–∑–∏–∏:"
        echo "$merge_output"
        return 1
    fi
}

# –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
apply_migrations() {
    log_step "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    cd $BACKEND_PATH
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
    log_debug "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–π..."
    local heads_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic heads 2>&1)
    local heads_count=$(echo "$heads_output" | grep -c "^[a-f0-9]\{12\}")
    
    if [ $heads_count -gt 1 ]; then
        log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏–≥—Ä–∞—Ü–∏–π. –ò—Å–ø—Ä–∞–≤–ª—è—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏..."
        fix_migration_conflicts
        if [ $? -ne 0 ]; then
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏–≥—Ä–∞—Ü–∏–π"
            return 1
        fi
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∏–≥—Ä–∞—Ü–∏—è—Ö
    log_debug "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏—è—Ö..."
    local current_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic current 2>&1)
    echo "–¢–µ–∫—É—â–∞—è —Ä–µ–≤–∏–∑–∏—è: $current_output"
    
    local heads_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic heads 2>&1)
    echo "Head —Ä–µ–≤–∏–∑–∏—è: $heads_output"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    local current_rev=$(echo "$current_output" | grep -o '[a-f0-9]\{12\}' | head -1)
    local head_rev=$(echo "$heads_output" | grep -o '[a-f0-9]\{12\}' | head -1)
    
    if [ -z "$current_rev" ]; then
        log_warning "–¢–µ–∫—É—â–∞—è —Ä–µ–≤–∏–∑–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –ë–î –ø—É—Å—Ç–∞—è."
        current_rev="empty"
    fi
    
    if [ -z "$head_rev" ]; then
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å head —Ä–µ–≤–∏–∑–∏—é"
        return 1
    fi
    
    if [ "$current_rev" != "$head_rev" ]; then
        log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏. –ü—Ä–∏–º–µ–Ω—è—é..."
        log_debug "–¢–µ–∫—É—â–∞—è: $current_rev, Head: $head_rev"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
        log_debug "–ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:"
        sudo -u melsu $BACKEND_PATH/venv/bin/alembic history -r$current_rev:head 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π"
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        local upgrade_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic upgrade head 2>&1)
        if [ $? -eq 0 ]; then
            log_success "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
            echo "$upgrade_output"
        else
            log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:"
            echo "$upgrade_output"
            return 1
        fi
    else
        log_info "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ä–µ–≤–∏–∑–∏—è: $current_rev)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î
backup_database() {
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    local backup_dir="/var/backups/melsu"
    local backup_file="$backup_dir/melsu_db_$(date +%Y%m%d_%H%M%S).sql"
    
    mkdir -p $backup_dir
    sudo -u postgres pg_dump melsu_db > $backup_file
    
    if [ $? -eq 0 ]; then
        log_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
        find $backup_dir -name "melsu_db_*.sql" -mtime +7 -delete
    else
        log_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
update_project() {
    log_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    backup_database
    
    cd $PROJECT_PATH
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    git fetch origin main
    local local_commit=$(git rev-parse HEAD)
    local remote_commit=$(git rev-parse origin/main)
    
    if [ "$local_commit" = "$remote_commit" ]; then
        log_info "–ü—Ä–æ–µ–∫—Ç —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω"
        return 0
    fi
    
    log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ó–∞–≥—Ä—É–∂–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git pull origin main
    
    if [ $? -ne 0 ]; then
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
        return 1
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º backend
    log_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd $BACKEND_PATH
    sudo -u melsu $BACKEND_PATH/venv/bin/pip install -r requirements.txt
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    apply_migrations
    
    # –û–±–Ω–æ–≤–ª—è–µ–º frontend
    log_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å–±–æ—Ä–∫–∞ frontend..."
    cd $FRONTEND_PATH
    sudo -u melsu npm install
    sudo -u melsu npm run build
    
    log_success "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
safe_restart() {
    log_step "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –≥–æ—Ç–æ–≤–æ –∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
    if ! systemctl is-active --quiet postgresql; then
        log_error "PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é..."
        systemctl start postgresql
    fi
    
    if ! systemctl is-active --quiet redis-server; then
        log_error "Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é..."
        systemctl start redis-server
    fi
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Celery Worker..."
    systemctl restart melsu-worker
    
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ API..."
    systemctl restart melsu-api
    
    # –ñ–¥–µ–º, –ø–æ–∫–∞ API –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API..."
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API
    local retries=0
    while [ $retries -lt 10 ]; do
        if curl -s http://localhost:8000/health > /dev/null; then
            break
        fi
        sleep 2
        retries=$((retries + 1))
    done
    
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
    systemctl restart nginx
    
    log_success "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
fix_migrations_complete() {
    log_step "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    local fix_script="$BACKEND_PATH/fix_migrations_complete.sh"
    if [ ! -f "$fix_script" ]; then
        log_error "–°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: $fix_script"
        log_info "–°–æ–∑–¥–∞—é —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        cat > "$fix_script" << 'EOF'
#!/bin/bash

# –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ melsu_control.sh

set -e

echo "üîß –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π MELSU Portal"
echo "==========================================="

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl stop melsu-api melsu-worker

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
cd /var/www/melsu/backend

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î..."
mkdir -p /var/backups/melsu
sudo -u postgres pg_dump melsu_db > /var/backups/melsu/melsu_db_before_migration_fix_$(date +%Y%m%d_%H%M%S).sql

# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö merge —Ä–µ–≤–∏–∑–∏–π
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö merge —Ä–µ–≤–∏–∑–∏–π..."
find alembic/versions/ -name "*merge*" -type f -delete 2>/dev/null || true
find alembic/versions/ -name "*ad3c0d6caa7f*" -type f -delete 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π..."
sudo -u postgres psql melsu_db -c "DELETE FROM alembic_version;" 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î..."
sudo -u postgres psql melsu_db -c "
DO \$\$
BEGIN
    -- –î–æ–±–∞–≤–ª—è–µ–º faculty_id –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='user_profiles' AND column_name='faculty_id') THEN
        ALTER TABLE user_profiles ADD COLUMN faculty_id INTEGER;
        ALTER TABLE user_profiles ADD CONSTRAINT fk_user_profiles_faculty_id FOREIGN KEY (faculty_id) REFERENCES departments(id);
        RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ faculty_id';
    END IF;
    
    -- –î–æ–±–∞–≤–ª—è–µ–º department_id –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='user_profiles' AND column_name='department_id') THEN
        ALTER TABLE user_profiles ADD COLUMN department_id INTEGER;
        ALTER TABLE user_profiles ADD CONSTRAINT fk_user_profiles_department_id FOREIGN KEY (department_id) REFERENCES departments(id);
        RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ department_id';
    END IF;
END
\$\$;
" || echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—è"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–µ–≤–∏–∑–∏–∏
echo "üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ä–µ–≤–∏–∑–∏–∏..."
if sudo -u postgres psql melsu_db -c "SELECT 1 FROM information_schema.columns WHERE table_name='user_profiles' AND column_name='faculty_id';" | grep -q "1 row"; then
    echo "–ü–æ–ª—è faculty_id –∏ department_id –Ω–∞–π–¥–µ–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ä–µ–≤–∏–∑–∏—é d34404f8ec53"
    sudo -u postgres psql melsu_db -c "INSERT INTO alembic_version (version_num) VALUES ('d34404f8ec53');"
else
    echo "–ü–æ–ª—è faculty_id –∏ department_id –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ä–µ–≤–∏–∑–∏—é a7843b1b03ca"
    sudo -u postgres psql melsu_db -c "INSERT INTO alembic_version (version_num) VALUES ('a7843b1b03ca');"
fi

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–∏–≥—Ä–∞—Ü–∏–π
echo "üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
sudo -u melsu /var/www/melsu/backend/venv/bin/alembic upgrade head

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
echo "üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
sudo -u melsu /var/www/melsu/backend/venv/bin/python -c "
import sys
sys.path.append('/var/www/melsu/backend')
from app.startup import init_departments, init_roles, init_request_templates
from app.database import get_db
from sqlalchemy.orm import Session

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
db = next(get_db())

try:
    print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤...')
    init_departments(db)
    
    print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π...')
    init_roles(db)
    
    print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞—è–≤–æ–∫...')
    init_request_templates(db)
    
    db.commit()
    print('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
except Exception as e:
    db.rollback()
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}')
    raise
finally:
    db.close()
"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl start melsu-api melsu-worker

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 5
systemctl status melsu-api --no-pager -l
systemctl status melsu-worker --no-pager -l

echo "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ!"
EOF

        chmod +x "$fix_script"
        chown melsu:melsu "$fix_script"
        log_success "–°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    log_info "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    bash "$fix_script"
    
    if [ $? -eq 0 ]; then
        log_success "‚úÖ –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
        diagnose_migrations
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º
init_directory_access_system() {
    log_step "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î..."
    backup_database
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü directory_access..."
    sudo -u postgres psql melsu_db << 'EOF'
-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É directory_access_template
CREATE TABLE IF NOT EXISTS directory_access_template (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    access_type VARCHAR(10) NOT NULL CHECK (access_type IN ('READ', 'write', 'admin')),
    scope VARCHAR(20) NOT NULL CHECK (scope IN ('students', 'groups', 'departments', 'all')),
    allows_inheritance BOOLEAN DEFAULT FALSE,
    inherit_children BOOLEAN DEFAULT TRUE,
    is_global BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    for_roles JSONB,
    department_types JSONB,
    restrictions JSONB,
    created_by INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É directory_access
CREATE TABLE IF NOT EXISTS directory_access (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    department_id INTEGER REFERENCES departments(id) ON DELETE CASCADE,
    access_type VARCHAR(10) NOT NULL CHECK (access_type IN ('read', 'write', 'admin')),
    scope VARCHAR(20) NOT NULL CHECK (scope IN ('students', 'groups', 'departments', 'all')),
    allows_inheritance BOOLEAN DEFAULT FALSE,
    inherit_children BOOLEAN DEFAULT TRUE,
    restrictions JSONB DEFAULT '{}',
    description TEXT,
    expires_at TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    granted_by INTEGER REFERENCES users(id),
    granted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    template_id INTEGER REFERENCES directory_access_template(id) ON DELETE SET NULL
);

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_directory_access_user_id ON directory_access(user_id);
CREATE INDEX IF NOT EXISTS idx_directory_access_department_id ON directory_access(department_id);
CREATE INDEX IF NOT EXISTS idx_directory_access_scope ON directory_access(scope);
CREATE INDEX IF NOT EXISTS idx_directory_access_expires_at ON directory_access(expires_at);
CREATE INDEX IF NOT EXISTS idx_directory_access_is_active ON directory_access(is_active);
CREATE INDEX IF NOT EXISTS idx_directory_access_template_name ON directory_access_template(name);
CREATE INDEX IF NOT EXISTS idx_directory_access_template_is_active ON directory_access_template(is_active);
EOF

    if [ $? -eq 0 ]; then
        log_success "‚úÖ –¢–∞–±–ª–∏—Ü—ã directory_access —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü directory_access"
        return 1
    fi
    
    # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    log_info "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é melsu_user..."
    sudo -u postgres psql melsu_db << 'EOF'
-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—ã directory_access
GRANT SELECT, INSERT, UPDATE, DELETE ON directory_access TO melsu_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON directory_access_template TO melsu_user;

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–¥–ª—è –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞)
GRANT USAGE, SELECT ON SEQUENCE directory_access_id_seq TO melsu_user;
GRANT USAGE, SELECT ON SEQUENCE directory_access_template_id_seq TO melsu_user;

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO melsu_user;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO melsu_user;

-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO melsu_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE, SELECT ON SEQUENCES TO melsu_user;
EOF

    if [ $? -eq 0 ]; then
        log_success "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã –¥–æ—Å—Ç—É–ø–∞
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞..."
    sudo -u postgres psql melsu_db << 'EOF'
-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
DELETE FROM directory_access_template;

-- –í—Å—Ç–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã –¥–æ—Å—Ç—É–ø–∞
INSERT INTO directory_access_template (name, description, access_type, scope, allows_inheritance, inherit_children, is_global, is_active) VALUES
('–†–∞–±–æ—Ç–Ω–∏–∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞', '–î–æ—Å—Ç—É–ø –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∫–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π', 'read', 'all', true, true, false, true),
('–†–∞–±–æ—Ç–Ω–∏–∫ –∫–∞—Ñ–µ–¥—Ä—ã', '–î–æ—Å—Ç—É–ø –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∫–∞—Ñ–µ–¥—Ä—ã –∫ –¥–∞–Ω–Ω—ã–º —Å–≤–æ–µ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è', 'read', 'all', true, true, false, true),
('–ö—É—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã', '–î–æ—Å—Ç—É–ø –∫—É—Ä–∞—Ç–æ—Ä–∞ –∫ —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã', 'read', 'students', false, false, false, true),
('–î–µ–∫–∞–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞', '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–µ–∫–∞–Ω–∞ –∫ –¥–∞–Ω–Ω—ã–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞', 'admin', 'all', true, true, false, true),
('–ó–∞–≤–µ–¥—É—é—â–∏–π –∫–∞—Ñ–µ–¥—Ä–æ–π', '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–≤–µ–¥—É—é—â–µ–≥–æ –∫ –¥–∞–Ω–Ω—ã–º –∫–∞—Ñ–µ–¥—Ä—ã', 'admin', 'all', true, true, false, true),
('–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—á–µ–±–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞', '–î–æ—Å—Ç—É–ø –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –≥—Ä—É–ø–ø', 'write', 'all', false, false, true, true),
('–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤', '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏', 'admin', 'all', false, false, true, true),
('–°–µ–∫—Ä–µ—Ç–∞—Ä—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞', '–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞', 'write', 'students', true, true, false, true),
('–ú–µ—Ç–æ–¥–∏—Å—Ç –∫–∞—Ñ–µ–¥—Ä—ã', '–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –≥—Ä—É–ø–ø –∫–∞—Ñ–µ–¥—Ä—ã', 'read', 'students', true, true, false, true),
('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã', '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º —Å–∏—Å—Ç–µ–º—ã', 'admin', 'all', false, false, true, true);

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
SELECT COUNT(*) as template_count FROM directory_access_template;
EOF

    if [ $? -eq 0 ]; then
        log_success "‚úÖ –®–∞–±–ª–æ–Ω—ã –¥–æ—Å—Ç—É–ø–∞ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ admin –¥–ª—è API
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API..."
    mkdir -p $BACKEND_PATH/app/api/admin
    touch $BACKEND_PATH/app/api/admin/__init__.py
    chown -R melsu:melsu $BACKEND_PATH/app/api/admin
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ alembic
    log_info "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è alembic..."
    cd $BACKEND_PATH
    sudo -u melsu $BACKEND_PATH/venv/bin/alembic stamp head
    
    if [ $? -eq 0 ]; then
        log_success "‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ alembic –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ"
    else
        log_warning "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ alembic"
    fi
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    log_info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    sudo -u melsu $BACKEND_PATH/venv/bin/python -c "
import sys
sys.path.append('$BACKEND_PATH')
try:
    from app.startup import init_departments, init_roles, init_request_templates
    from app.database import get_db
    from sqlalchemy.orm import Session
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
    db = next(get_db())
    
    try:
        print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤...')
        init_departments(db)
        
        print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π...')
        init_roles(db)
        
        print('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞—è–≤–æ–∫...')
        init_request_templates(db)
        
        db.commit()
        print('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
    except Exception as e:
        db.rollback()
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}')
        raise
    finally:
        db.close()
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}')
    exit(1)
"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
    local table_count=$(sudo -u postgres psql melsu_db -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_name IN ('directory_access', 'directory_access_template');")
    local template_count=$(sudo -u postgres psql melsu_db -t -c "SELECT COUNT(*) FROM directory_access_template WHERE is_active = true;" 2>/dev/null || echo "0")
    
    if [ "$table_count" -eq 2 ] && [ "$template_count" -gt 0 ]; then
        log_success "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        log_info "üìä –°–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: 2"
        log_info "üìã –°–æ–∑–¥–∞–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞: $template_count"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
        log_info "–°–æ–∑–¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–æ—Å—Ç—É–ø–∞:"
        sudo -u postgres psql melsu_db -c "SELECT id, name, access_type, scope, inherit_children FROM directory_access_template WHERE is_active = true ORDER BY id;"
        
        return 0
    else
        log_error "‚ùå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏"
        log_error "–¢–∞–±–ª–∏—Ü –Ω–∞–π–¥–µ–Ω–æ: $table_count (–æ–∂–∏–¥–∞–ª–æ—Å—å: 2)"
        log_error "–®–∞–±–ª–æ–Ω–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: $template_count (–æ–∂–∏–¥–∞–ª–æ—Å—å: > 0)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
full_update() {
    log_info "üîÑ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    systemctl stop melsu-api melsu-worker
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
    update_project
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    safe_restart
    
    log_success "‚úÖ –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_system() {
    echo -e "${BLUE}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã MELSU Portal${NC}"
    echo "=================================="
    
    # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    echo -e "\n${YELLOW}–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
    check_service_status "postgresql"
    check_service_status "redis-server"
    check_service_status "nginx"
    check_service_status "melsu-api"
    check_service_status "melsu-worker"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    echo -e "\n${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ API:${NC}"
    check_api_health
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    echo -e "\n${YELLOW}–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:${NC}"
    check_database
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    echo -e "\n${YELLOW}–°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π:${NC}"
    cd $BACKEND_PATH
    local current_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic current 2>&1)
    local heads_output=$(sudo -u melsu $BACKEND_PATH/venv/bin/alembic heads 2>&1)
    local heads_count=$(echo "$heads_output" | grep -c "^[a-f0-9]\{12\}")
    
    echo "–¢–µ–∫—É—â–∞—è —Ä–µ–≤–∏–∑–∏—è: $(echo "$current_output" | grep -o '[a-f0-9]\{12\}' | head -1 || echo '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')"
    echo "Head —Ä–µ–≤–∏–∑–∏—è: $(echo "$heads_output" | grep -o '[a-f0-9]\{12\}' | head -1 || echo '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')"
    
    if [ $heads_count -gt 1 ]; then
        echo -e "${RED}‚ö†Ô∏è  –ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏–≥—Ä–∞—Ü–∏–π: –Ω–∞–π–¥–µ–Ω–æ $heads_count head —Ä–µ–≤–∏–∑–∏–π${NC}"
    else
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ${NC}"
    fi
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
    echo -e "\n${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}')"
    echo "RAM: $(free -h | awk 'NR==2{printf "%.1f%% (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è %s –∏–∑ %s)", $3*100/$2, $3, $2}')"
    echo "–î–∏—Å–∫: $(df -h / | awk 'NR==2{printf "%s –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑ %s (%s)", $3, $2, $5}')"
    
    # –°—Ç–∞—Ç—É—Å Git
    echo -e "\n${YELLOW}Git —Å—Ç–∞—Ç—É—Å:${NC}"
    cd $PROJECT_PATH
    local current_branch=$(git branch --show-current)
    local last_commit=$(git log -1 --pretty=format:"%h - %s (%cr)")
    echo "–í–µ—Ç–∫–∞: $current_branch"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $last_commit"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    git fetch origin main > /dev/null 2>&1
    local commits_behind=$(git rev-list --count HEAD..origin/main)
    if [ $commits_behind -gt 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $commits_behind –∫–æ–º–º–∏—Ç–æ–≤${NC}"
    else
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –∞–∫—Ç—É–∞–ª–µ–Ω${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        start)
            log_info "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
            systemctl start postgresql redis-server melsu-api melsu-worker nginx
            log_success "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
            ;;
        stop)
            log_info "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
            systemctl stop melsu-api melsu-worker
            log_success "‚èπÔ∏è –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            ;;
        restart)
            log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
            safe_restart
            ;;
        update)
            full_update
            ;;
        migrate)
            apply_migrations
            ;;
        fix-migrations)
            fix_migration_conflicts
            ;;
        diagnose-migrations)
            diagnose_migrations
            ;;
        backup)
            backup_database
            ;;
        status)
            monitor_system
            ;;
        logs)
            echo -e "${BLUE}üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):${NC}"
            echo "======================================"
            echo -e "\n${YELLOW}API –ª–æ–≥–∏:${NC}"
            journalctl -u melsu-api -n 20 --no-pager
            echo -e "\n${YELLOW}Worker –ª–æ–≥–∏:${NC}"
            journalctl -u melsu-worker -n 20 --no-pager
            echo -e "\n${YELLOW}Nginx –ª–æ–≥–∏:${NC}"
            tail -20 /var/log/nginx/error.log
            ;;
        live-logs)
            echo -e "${BLUE}üìã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...${NC}"
            journalctl -u melsu-api -u melsu-worker -f
            ;;
        test)
            echo -e "${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
            echo "========================"
            echo "Backend API:"
            curl -s -w "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: %{time_total}s\n" http://localhost:8000/health || echo "API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            echo -e "\nFrontend —á–µ—Ä–µ–∑ Nginx:"
            curl -s -I http://localhost/ | head -1 || echo "Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket:"
            curl -s -I -H "Upgrade: websocket" http://localhost:8000/ws || echo "WebSocket –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            ;;
        ssl)
            log_info "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
            certbot --nginx -d melsu.local -d www.melsu.local
            log_success "üîí SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
        deploy)
            log_info "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
            bash /var/www/melsu/deploy.sh
            ;;
        fix-migrations-complete)
            fix_migrations_complete
            ;;
        init-directory-access)
            init_directory_access_system
            ;;
        init)
            log_info "üîÑ –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã MELSU Portal..."
            init_directory_access_system
            if [ $? -eq 0 ]; then
                log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
                safe_restart
                log_success "‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"
            else
                log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã"
                return 1
            fi
            ;;
        *)
            echo -e "${BLUE}üöÄ MELSU Portal - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
            echo "====================================="
            echo ""
            echo -e "${YELLOW}–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
            echo "  start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
            echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
            echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
            echo "  update      - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å Git –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
            echo "  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
            echo "  init        - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º"
            echo ""
            echo -e "${YELLOW}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ë–î:${NC}"
            echo "  migrate              - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î"
            echo "  fix-migrations       - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  fix-migrations-complete - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å –æ—á–∏—Å—Ç–∫–æ–π"
            echo "  diagnose-migrations  - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  backup               - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î"
            echo ""
            echo -e "${YELLOW}–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
            echo "  logs        - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"
            echo "  live-logs   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
            echo "  test        - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
            echo ""
            echo -e "${YELLOW}–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:${NC}"
            echo "  ssl         - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
            echo "  deploy      - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
            echo "  init-directory-access - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º"
            echo ""
            echo -e "${GREEN}–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:${NC}"
            echo "  melsu init                      # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º"
            echo "  melsu update                    # –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
            echo "  melsu status                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
            echo "  melsu fix-migrations            # –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  melsu fix-migrations-complete   # –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –æ—á–∏—Å—Ç–∫–æ–π"
            echo "  melsu diagnose-migrations       # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  melsu live-logs                 # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
            echo "  melsu init-directory-access     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º"
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 