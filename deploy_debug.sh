#!/bin/bash

# Deploy script –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è MELSU Portal —Å –¥–µ–±–∞–≥–æ–º
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_debug.sh

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ MELSU Portal —Å –¥–µ–±–∞–≥–æ–º..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git..."
git fetch origin
git reset --hard origin/main

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose down

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose build --no-cache

# –í–∫–ª—é—á–∞–µ–º –¥–µ–±–∞–∂–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è backend
echo "üêõ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–µ–±–∞–∂–Ω—ã–π —Ä–µ–∂–∏–º..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π docker-compose —Ñ–∞–π–ª —Å –¥–µ–±–∞–≥–æ–º
cat > docker-compose.debug.yml << EOF
version: '3.8'
services:
  backend:
    environment:
      - DEBUG=True
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
    volumes:
      - ./backend/logs:/app/logs
    ports:
      - "8000:8000"
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]
  
  frontend:
    environment:
      - NODE_ENV=development
      - REACT_APP_DEBUG=true
    ports:
      - "3000:3000"
EOF

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p backend/logs

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å –¥–µ–±–∞–≥–æ–º
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å –¥–µ–±–∞–≥–æ–º..."
docker-compose -f docker-compose.yml -f docker-compose.debug.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend:"
docker-compose logs --tail=20 backend

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."
if curl -f -s http://localhost:8000/docs > /dev/null; then
    echo "‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
if curl -f -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
echo "  –õ–æ–≥–∏ backend:    docker-compose logs -f backend"
echo "  –õ–æ–≥–∏ frontend:   docker-compose logs -f frontend"
echo "  –õ–æ–≥–∏ database:   docker-compose logs -f db"
echo "  –í—Å–µ –ª–æ–≥–∏:        docker-compose logs -f"
echo "  –°—Ç–∞—Ç—É—Å:          docker-compose ps"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:      docker-compose restart"
echo ""
echo "üåê URLs:"
echo "  Frontend:        http://localhost:3000"
echo "  Backend API:     http://localhost:8000"
echo "  API Docs:        http://localhost:8000/docs"
echo ""
echo "üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: backend/logs/" 