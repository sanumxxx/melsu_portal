# Alembic конфигурация для продакшн сервера
# Использует DATABASE_URL из переменных окружения

[alembic]
# Use environment variable DATABASE_URL instead of hardcoded connection
# This ensures unified database configuration source
sqlalchemy.url = 

script_location = alembic
prepend_sys_path = .
version_path_separator = os  # Use os.pathsep. Default configuration used for new projects.

# Template used to generate migration file names. Available variables:
# %%(rev)s - revision id
# %%(slug)s - the filename slug computed from the message
# %%(year)d, %%(month).2d, %%(day).2d, %%(hour).2d, %%(minute).2d, %%(second).2d - timestamp parts
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# Truncate slug part of the filename to this length. Use 0 to disable truncation.
truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command, 
# regardless of autogenerate
revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file 
# to be detected as revisions in the versions/ directory
sourceless = false

# Version number format. Use %%(rev)s to include the revision id
version_num_format = %%(rev)s

# Max length of characters to apply to the "slug" field for autogenerate
# max_length = 50

[post_write_hooks]
# Post-write hooks define scripts or Python functions that are run on newly generated revision scripts.

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S 