"""
–ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import logging
import os
from sqlalchemy.orm import Session
from sqlalchemy.exc import IntegrityError
from sqlalchemy import text
from datetime import datetime

from .database import get_db
from .models.role import Role
from .models.field import FieldType
from .models.department import Department

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# =====================================================
# –°–ò–°–¢–ï–ú–ù–´–ï –†–û–õ–ò
# =====================================================

SYSTEM_ROLES = [
    {
        'name': 'admin',
        'display_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–º –ø–æ—Ä—Ç–∞–ª–æ–º. –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Ä–æ–ª—è–º–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –≤—Å–µ–º–∏ —Ç–∏–ø–∞–º–∏ –∑–∞—è–≤–æ–∫.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'manager',
        'display_name': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
        'description': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ú–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö, —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–±–æ—á–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'employee',
        'display_name': '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
        'description': '–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ú–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–º–∫–∞—Ö —Å–≤–æ–∏—Ö –ø–æ–ª–Ω–æ–º–æ—á–∏–π, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª—É–∂–µ–±–Ω—ã–µ –∑–∞—è–≤–∫–∏.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'student',
        'display_name': '–°—Ç—É–¥–µ–Ω—Ç',
        'description': '–°—Ç—É–¥–µ–Ω—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞—è–≤–∫–∏, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á–µ–±–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'teacher',
        'display_name': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å',
        'description': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É—á–µ–±–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'guest',
        'display_name': '–ì–æ—Å—Ç—å',
        'description': '–ì–æ—Å—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'schoolchild',
        'display_name': '–®–∫–æ–ª—å–Ω–∏–∫',
        'description': '–£—á–∞—â–∏–π—Å—è —à–∫–æ–ª—ã. –ú–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∏ –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ.',
        'is_system': True,
        'is_active': True
    },
    {
        'name': 'curator',
        'display_name': '–ö—É—Ä–∞—Ç–æ—Ä',
        'description': '–ö—É—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –∏–ª–∏ –∫—É—Ä—Å–∞',
        'is_system': True,
        'is_active': True
    }
]

# =====================================================
# –¢–ò–ü–´ –ü–û–õ–ï–ô
# =====================================================

FIELD_TYPES = [
    {
        "name": "text",
        "label": "–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ",
        "description": "–û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞",
        "input_type": "text",
        "has_options": False
    },
    {
        "name": "textarea",
        "label": "–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç",
        "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞",
        "input_type": "textarea",
        "has_options": False
    },
    {
        "name": "number",
        "label": "–ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ",
        "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —á–∏—Å–µ–ª",
        "input_type": "number",
        "has_options": False
    },
    {
        "name": "email",
        "label": "Email",
        "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ email –∞–¥—Ä–µ—Å–∞",
        "input_type": "email",
        "has_options": False
    },
    {
        "name": "phone",
        "label": "–¢–µ–ª–µ—Ñ–æ–Ω",
        "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        "input_type": "tel",
        "has_options": False
    },
    {
        "name": "date",
        "label": "–î–∞—Ç–∞",
        "description": "–ü–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã",
        "input_type": "date",
        "has_options": False
    },
    {
        "name": "select",
        "label": "–í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫",
        "description": "–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞",
        "input_type": "select",
        "has_options": True
    },
    {
        "name": "radio",
        "label": "–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏",
        "description": "–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π",
        "input_type": "radio",
        "has_options": True
    },
    {
        "name": "checkbox",
        "label": "–§–ª–∞–∂–∫–∏",
        "description": "–í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
        "input_type": "checkbox",
        "has_options": True
    },
    {
        "name": "file",
        "label": "–§–∞–π–ª",
        "description": "–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞",
        "input_type": "file",
        "has_options": False
    },
    {
        "name": "faculty_select",
        "label": "–í—ã–±–æ—Ä —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞",
        "description": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤",
        "input_type": "select",
        "has_options": True
    },
    {
        "name": "department_select",
        "label": "–í—ã–±–æ—Ä –∫–∞—Ñ–µ–¥—Ä—ã",
        "description": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ñ–µ–¥—Ä",
        "input_type": "select",
        "has_options": True
    }
]

# =====================================================
# –ë–ê–ó–û–í–´–ï –î–ï–ü–ê–†–¢–ê–ú–ï–ù–¢–´
# =====================================================

BASE_DEPARTMENTS = [
    {
        "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
        "description": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞",
        "code": "ADMIN",
        "is_active": True
    },
    {
        "name": "–î–µ–∫–∞–Ω–∞—Ç",
        "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º–∏",
        "code": "DEAN",
        "is_active": True
    },
    {
        "name": "–£—á–µ–±–Ω–∞—è —á–∞—Å—Ç—å",
        "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–±–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º",
        "code": "STUDY",
        "is_active": True
    },
    {
        "name": "–ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è",
        "description": "–ü—Ä–∏—ë–º –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤",
        "code": "ADMISSIONS",
        "is_active": True
    },
    {
        "name": "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª",
        "description": "–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏",
        "code": "STUDENT_OFFICE",
        "is_active": True
    },
    {
        "name": "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞",
        "description": "–ë–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–µ —É—Å–ª—É–≥–∏",
        "code": "LIBRARY",
        "is_active": True
    },
    {
        "name": "IT-–æ—Ç–¥–µ–ª",
        "description": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "code": "IT",
        "is_active": True
    }
]

# =====================================================
# –§–£–ù–ö–¶–ò–ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
# =====================================================

def init_system_roles(db: Session) -> dict:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–æ–ª–µ–π."""
    stats = {'created': 0, 'updated': 0, 'skipped': 0, 'errors': 0}
    
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–æ–ª–µ–π...")
    
    for role_data in SYSTEM_ROLES:
        try:
            existing_role = db.query(Role).filter(Role.name == role_data['name']).first()
            
            if existing_role:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–∞—è —Ä–æ–ª—å
                if existing_role.is_system:
                    for key, value in role_data.items():
                        if key != 'name':
                            setattr(existing_role, key, value)
                    existing_role.updated_at = datetime.utcnow()
                    stats['updated'] += 1
                    logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å: {role_data['display_name']}")
                else:
                    stats['skipped'] += 1
                    logger.info(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Ä–æ–ª—å: {role_data['display_name']} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è)")
            else:
                new_role = Role(**role_data)
                db.add(new_role)
                stats['created'] += 1
                logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: {role_data['display_name']}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–æ–ª–∏ {role_data['name']}: {e}")
            stats['errors'] += 1
    
    return stats

def init_field_types(db: Session) -> dict:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π."""
    stats = {'created': 0, 'updated': 0, 'skipped': 0, 'errors': 0}
    
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π...")
    
    for field_type_data in FIELD_TYPES:
        try:
            existing = db.query(FieldType).filter(
                FieldType.name == field_type_data["name"]
            ).first()
            
            if existing:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
                for key, value in field_type_data.items():
                    if key != "name":
                        setattr(existing, key, value)
                stats['updated'] += 1
                logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–∏–ø –ø–æ–ª—è: {field_type_data['name']}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
                field_type = FieldType(**field_type_data)
                db.add(field_type)
                stats['created'] += 1
                logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø –ø–æ–ª—è: {field_type_data['name']}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–∏–ø–∞ –ø–æ–ª—è {field_type_data['name']}: {e}")
            stats['errors'] += 1
    
    return stats

def init_base_departments(db: Session) -> dict:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤."""
    stats = {'created': 0, 'updated': 0, 'skipped': 0, 'errors': 0}
    
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤...")
    
    for dept_data in BASE_DEPARTMENTS:
        try:
            existing = db.query(Department).filter(
                Department.code == dept_data["code"]
            ).first()
            
            if existing:
                stats['skipped'] += 1
                logger.info(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç: {dept_data['name']} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
            else:
                department = Department(**dept_data)
                db.add(department)
                stats['created'] += 1
                logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç: {dept_data['name']}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ {dept_data['name']}: {e}")
            stats['errors'] += 1
    
    return stats

def check_required_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    required_vars = [
        'DATABASE_URL',
        'SECRET_KEY'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        logger.warning(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        logger.info("‚ÑπÔ∏è –ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    else:
        logger.info("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

def startup_application():
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.
    
    –í–∫–ª—é—á–∞–µ—Ç:
    - –ü—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–æ–ª–µ–π
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑–æ–≤—ã—Ö –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è University Portal...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db: Session = next(get_db())
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            db.execute(text("SELECT 1"))
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–æ–ª–∏
            roles_stats = init_system_roles(db)
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã –ø–æ–ª–µ–π
            fields_stats = init_field_types(db)
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã
            depts_stats = init_base_departments(db)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            db.commit()
            
            # –í—ã–≤–æ–¥–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_created = roles_stats['created'] + fields_stats['created'] + depts_stats['created']
            total_updated = roles_stats['updated'] + fields_stats['updated'] + depts_stats['updated']
            total_errors = roles_stats['errors'] + fields_stats['errors'] + depts_stats['errors']
            
            logger.info("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:")
            logger.info(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {total_created}")
            logger.info(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {total_updated}")
            logger.info(f"   ‚ùå –û—à–∏–±–æ–∫: {total_errors}")
            
            if total_errors == 0:
                logger.info("üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!")
            else:
                logger.warning(f"‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏: {total_errors}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
            db.rollback()
            raise e
        finally:
            db.close()
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        # –ù–µ –ø–æ–¥–Ω–∏–º–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–≥–ª–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        # –¥–∞–∂–µ –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
        logger.info("‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏") 