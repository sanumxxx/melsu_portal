"""Initial migration with masks and media

Revision ID: 07e3806a12df
Revises: 
Create Date: 2025-07-03 06:02:12.413349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '07e3806a12df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('department_type', sa.String(length=50), nullable=False),
    sa.Column('head_name', sa.String(length=200), nullable=True),
    sa.Column('head_title', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('room_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('established_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_table('email_verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_verifications_email'), 'email_verifications', ['email'], unique=False)
    op.create_index(op.f('ix_email_verifications_id'), 'email_verifications', ['id'], unique=False)
    op.create_table('field_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('input_type', sa.String(length=50), nullable=False),
    sa.Column('has_options', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_field_types_id'), 'field_types', ['id'], unique=False)
    op.create_table('request_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('deadline_days', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('routing_type', sa.String(length=20), nullable=False),
    sa.Column('default_assignees', sa.JSON(), nullable=True),
    sa.Column('auto_assign_enabled', sa.Boolean(), nullable=False),
    sa.Column('department_routing', sa.Boolean(), nullable=False),
    sa.Column('routing_rules', sa.JSON(), nullable=True),
    sa.Column('auto_role_assignment_enabled', sa.Boolean(), nullable=False),
    sa.Column('role_assignment_rules', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_request_templates_id'), 'request_templates', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('roles', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=True),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_logs_action'), 'activity_logs', ['action'], unique=False)
    op.create_index(op.f('ix_activity_logs_created_at'), 'activity_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_activity_logs_id'), 'activity_logs', ['id'], unique=False)
    op.create_index(op.f('ix_activity_logs_resource_id'), 'activity_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_activity_logs_resource_type'), 'activity_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_activity_logs_user_id'), 'activity_logs', ['user_id'], unique=False)
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Заголовок объявления'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание объявления'),
    sa.Column('image_url', sa.String(length=500), nullable=True, comment='URL изображения (устарело, используйте media_url)'),
    sa.Column('has_media', sa.Boolean(), nullable=False, comment='Есть ли медиафайл'),
    sa.Column('media_type', sa.String(length=20), nullable=True, comment='Тип медиа: image, gif, video'),
    sa.Column('media_url', sa.Text(), nullable=True, comment='URL медиафайла'),
    sa.Column('media_filename', sa.String(length=255), nullable=True, comment='Оригинальное имя файла'),
    sa.Column('media_size', sa.Integer(), nullable=True, comment='Размер файла в байтах'),
    sa.Column('media_duration', sa.Integer(), nullable=True, comment='Длительность видео в секундах'),
    sa.Column('media_thumbnail_url', sa.Text(), nullable=True, comment='URL превью для видео'),
    sa.Column('media_width', sa.Integer(), nullable=True, comment='Ширина медиа'),
    sa.Column('media_height', sa.Integer(), nullable=True, comment='Высота медиа'),
    sa.Column('media_autoplay', sa.Boolean(), nullable=False, comment='Автопроигрывание'),
    sa.Column('media_loop', sa.Boolean(), nullable=False, comment='Зацикливание'),
    sa.Column('media_muted', sa.Boolean(), nullable=False, comment='Без звука по умолчанию'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Активно ли объявление'),
    sa.Column('target_roles', sa.JSON(), nullable=True, comment='Роли для которых показывать (null = все)'),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcements_id'), 'announcements', ['id'], unique=False)
    op.create_table('fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('field_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('label', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('placeholder', sa.String(length=500), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('conditional_field_id', sa.Integer(), nullable=True),
    sa.Column('conditional_value', sa.String(length=255), nullable=True),
    sa.Column('conditional_operator', sa.String(length=20), nullable=True),
    sa.Column('profile_field_mapping', sa.String(length=100), nullable=True),
    sa.Column('update_profile_on_submit', sa.Boolean(), nullable=True),
    sa.Column('update_profile_on_approve', sa.Boolean(), nullable=True),
    sa.Column('mask_enabled', sa.Boolean(), nullable=False),
    sa.Column('mask_type', sa.String(length=50), nullable=True),
    sa.Column('mask_pattern', sa.Text(), nullable=True),
    sa.Column('mask_placeholder', sa.Text(), nullable=True),
    sa.Column('mask_validation_regex', sa.Text(), nullable=True),
    sa.Column('mask_validation_message', sa.Text(), nullable=True),
    sa.Column('mask_guide', sa.Boolean(), nullable=False),
    sa.Column('mask_keep_char_positions', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['conditional_field_id'], ['fields.id'], ),
    sa.ForeignKeyConstraint(['field_type_id'], ['field_types.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['request_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fields_id'), 'fields', ['id'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('education_level', sa.String(length=50), nullable=True),
    sa.Column('education_form', sa.String(length=50), nullable=True),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_table('portfolio_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('academic', 'sports', 'creative', 'volunteer', 'professional', name='achievementcategory'), nullable=False),
    sa.Column('achievement_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('organization', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_achievements_id'), 'portfolio_achievements', ['id'], unique=False)
    op.create_index(op.f('ix_portfolio_achievements_user_id'), 'portfolio_achievements', ['user_id'], unique=False)
    op.create_table('report_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('fields', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allowed_roles', sa.JSON(), nullable=True),
    sa.Column('viewers', sa.JSON(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_templates_id'), 'report_templates', ['id'], unique=False)
    op.create_table('requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('possible_assignees', sa.JSON(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('form_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['request_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_requests_id'), 'requests', ['id'], unique=False)
    op.create_table('student_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('access_level', sa.String(length=50), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_access_id'), 'student_access', ['id'], unique=False)
    op.create_table('user_department_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('assignment_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('assignment_type', sa.String(length=50), nullable=False),
    sa.Column('workload_percentage', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_department_assignments_department_id'), 'user_department_assignments', ['department_id'], unique=False)
    op.create_index(op.f('ix_user_department_assignments_id'), 'user_department_assignments', ['id'], unique=False)
    op.create_index(op.f('ix_user_department_assignments_user_id'), 'user_department_assignments', ['user_id'], unique=False)
    op.create_table('announcement_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcement_views_id'), 'announcement_views', ['id'], unique=False)
    op.create_table('portfolio_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['portfolio_achievements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_files_achievement_id'), 'portfolio_files', ['achievement_id'], unique=False)
    op.create_index(op.f('ix_portfolio_files_id'), 'portfolio_files', ['id'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('submitted_by_id', sa.Integer(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['report_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_table('request_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_request_comments_id'), 'request_comments', ['id'], unique=False)
    op.create_table('request_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=255), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_request_files_id'), 'request_files', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('alternative_email', sa.String(length=100), nullable=True),
    sa.Column('passport_series', sa.String(length=10), nullable=True),
    sa.Column('passport_number', sa.String(length=20), nullable=True),
    sa.Column('passport_issued_by', sa.Text(), nullable=True),
    sa.Column('passport_issued_date', sa.Date(), nullable=True),
    sa.Column('snils', sa.String(length=20), nullable=True),
    sa.Column('inn', sa.String(length=20), nullable=True),
    sa.Column('registration_region', sa.String(length=100), nullable=True),
    sa.Column('registration_city', sa.String(length=100), nullable=True),
    sa.Column('registration_address', sa.Text(), nullable=True),
    sa.Column('registration_postal_code', sa.String(length=10), nullable=True),
    sa.Column('residence_region', sa.String(length=100), nullable=True),
    sa.Column('residence_city', sa.String(length=100), nullable=True),
    sa.Column('residence_address', sa.Text(), nullable=True),
    sa.Column('residence_postal_code', sa.String(length=10), nullable=True),
    sa.Column('student_id', sa.String(length=50), nullable=True),
    sa.Column('course', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('faculty', sa.String(length=200), nullable=True),
    sa.Column('department', sa.String(length=200), nullable=True),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('education_level', sa.String(length=50), nullable=True),
    sa.Column('education_form', sa.String(length=50), nullable=True),
    sa.Column('funding_type', sa.String(length=50), nullable=True),
    sa.Column('enrollment_date', sa.Date(), nullable=True),
    sa.Column('graduation_date', sa.Date(), nullable=True),
    sa.Column('academic_status', sa.String(length=50), nullable=True),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('employment_type', sa.String(length=50), nullable=True),
    sa.Column('work_schedule', sa.String(length=100), nullable=True),
    sa.Column('education_degree', sa.String(length=100), nullable=True),
    sa.Column('education_title', sa.String(length=100), nullable=True),
    sa.Column('work_experience', sa.Integer(), nullable=True),
    sa.Column('pedagogical_experience', sa.Integer(), nullable=True),
    sa.Column('marital_status', sa.String(length=50), nullable=True),
    sa.Column('children_count', sa.Integer(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=200), nullable=True),
    sa.Column('social_category', sa.String(length=100), nullable=True),
    sa.Column('military_service', sa.String(length=100), nullable=True),
    sa.Column('gpa', sa.String(length=10), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_request_files_id'), table_name='request_files')
    op.drop_table('request_files')
    op.drop_index(op.f('ix_request_comments_id'), table_name='request_comments')
    op.drop_table('request_comments')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_portfolio_files_id'), table_name='portfolio_files')
    op.drop_index(op.f('ix_portfolio_files_achievement_id'), table_name='portfolio_files')
    op.drop_table('portfolio_files')
    op.drop_index(op.f('ix_announcement_views_id'), table_name='announcement_views')
    op.drop_table('announcement_views')
    op.drop_index(op.f('ix_user_department_assignments_user_id'), table_name='user_department_assignments')
    op.drop_index(op.f('ix_user_department_assignments_id'), table_name='user_department_assignments')
    op.drop_index(op.f('ix_user_department_assignments_department_id'), table_name='user_department_assignments')
    op.drop_table('user_department_assignments')
    op.drop_index(op.f('ix_student_access_id'), table_name='student_access')
    op.drop_table('student_access')
    op.drop_index(op.f('ix_requests_id'), table_name='requests')
    op.drop_table('requests')
    op.drop_index(op.f('ix_report_templates_id'), table_name='report_templates')
    op.drop_table('report_templates')
    op.drop_index(op.f('ix_portfolio_achievements_user_id'), table_name='portfolio_achievements')
    op.drop_index(op.f('ix_portfolio_achievements_id'), table_name='portfolio_achievements')
    op.drop_table('portfolio_achievements')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_fields_id'), table_name='fields')
    op.drop_table('fields')
    op.drop_index(op.f('ix_announcements_id'), table_name='announcements')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_activity_logs_user_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_resource_type'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_resource_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_created_at'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_action'), table_name='activity_logs')
    op.drop_table('activity_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_request_templates_id'), table_name='request_templates')
    op.drop_table('request_templates')
    op.drop_index(op.f('ix_field_types_id'), table_name='field_types')
    op.drop_table('field_types')
    op.drop_index(op.f('ix_email_verifications_id'), table_name='email_verifications')
    op.drop_index(op.f('ix_email_verifications_email'), table_name='email_verifications')
    op.drop_table('email_verifications')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###
