"""add_directory_access_system

Revision ID: b81b44197c01
Revises: d34404f8ec53
Create Date: 2025-07-05 19:22:48.432479

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b81b44197c01'
down_revision: Union[str, None] = 'd34404f8ec53'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_student_access_id', table_name='student_access')
    op.drop_table('student_access')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_access',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('access_level', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('assigned_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('assigned_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], name='student_access_assigned_by_fkey'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='student_access_department_id_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name='student_access_employee_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='student_access_pkey')
    )
    op.create_index('ix_student_access_id', 'student_access', ['id'], unique=False)
    # ### end Alembic commands ###
