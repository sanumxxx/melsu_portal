#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∂—É—Ä–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
"""

import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
ADMIN_EMAIL = "admin@melsu.ru"
ADMIN_PASSWORD = "admin123"

def login():
    """–õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üîê –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä...")
    
    login_data = {
        "email": ADMIN_EMAIL,
        "password": ADMIN_PASSWORD
    }
    
    response = requests.post(f"{BASE_URL}/auth/login", json=login_data)
    
    if response.status_code == 200:
        data = response.json()
        token = data.get("access_token")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω! –¢–æ–∫–µ–Ω: {token[:20]}...")
        return token
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code} - {response.text}")
        return None

def test_activity_logs_api(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –∂—É—Ä–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    headers = {"Authorization": f"Bearer {token}"}
    
    print("\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∂—É—Ä–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∏—Ç—å –∂—É—Ä–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    print("\n1. –ü–æ–ª—É—á–∞–µ–º –∂—É—Ä–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    response = requests.get(f"{BASE_URL}/api/activity-logs/", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∂—É—Ä–Ω–∞–ª! –ù–∞–π–¥–µ–Ω–æ {data['total']} –∑–∞–ø–∏—Å–µ–π")
        
        if data['items']:
            print("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
            for item in data['items'][:3]:
                print(f"   - {item['created_at']}: {item['action']} - {item['description']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞: {response.status_code} - {response.text}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\n2. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    response = requests.get(f"{BASE_URL}/api/activity-logs/stats", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!")
        print(f"   üìà –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ {data['period_days']} –¥–Ω–µ–π: {data['total_actions']}")
        print(f"   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data['unique_users']}")
        
        if data['top_actions']:
            print(f"   üî• –°–∞–º–æ–µ —á–∞—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {data['top_actions'][0]['action']} ({data['top_actions'][0]['count']} —Ä–∞–∑)")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code} - {response.text}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    print("\n3. –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...")
    response = requests.get(f"{BASE_URL}/api/activity-logs/my", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –ª–∏—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ù–∞–π–¥–µ–Ω–æ {len(data)} –∑–∞–ø–∏—Å–µ–π")
        
        if data:
            print("üìù –í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
            for item in data[:3]:
                print(f"   - {item['created_at']}: {item['action']} - {item['description']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {response.status_code} - {response.text}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    print("\n4. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...")
    response = requests.get(f"{BASE_URL}/api/activity-logs/actions", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        actions = data['actions']
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π! –î–æ—Å—Ç—É–ø–Ω–æ {len(actions)} —Ç–∏–ø–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π")
        print(f"   üìã –ü—Ä–∏–º–µ—Ä—ã: {', '.join([a['value'] for a in actions[:5]])}...")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π: {response.status_code} - {response.text}")

def create_test_activity(token):
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    headers = {"Authorization": f"Bearer {token}"}
    
    print("\nüß™ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    test_requests = [
        f"{BASE_URL}/api/announcements/",  # –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        f"{BASE_URL}/api/users/all",       # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
        f"{BASE_URL}/profile",             # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è
    ]
    
    for url in test_requests:
        try:
            response = requests.get(url, headers=headers)
            print(f"   üìç –ó–∞–ø—Ä–æ—Å –∫ {url.split('/')[-1]}: {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ {url}: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∂—É—Ä–Ω–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    token = login()
    if not token:
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    create_test_activity(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_activity_logs_api(token)
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 