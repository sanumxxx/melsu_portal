#!/usr/bin/env python3
"""–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.services.profile_update_service import ProfileUpdateService
from app.models.request import Request
from app.models.field import Field
from app.models.user_profile import UserProfile
from sqlalchemy.orm import Session

def test_profile_update():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –∑–∞—è–≤–∫–∏"""
    
    db: Session = next(get_db())
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—è–≤–∫—É 18
        request = db.query(Request).filter(Request.id == 18).first()
        if not request:
            print("‚ùå –ó–∞—è–≤–∫–∞ 18 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:")
        print(f"   ID: {request.id}")
        print(f"   –°—Ç–∞—Ç—É—Å: {request.status}")
        print(f"   –ê–≤—Ç–æ—Ä: {request.author_id}")
        print(f"   –®–∞–±–ª–æ–Ω: {request.template_id}")
        print(f"   –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {request.form_data}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —à–∞–±–ª–æ–Ω–∞
        fields = db.query(Field).filter(
            Field.template_id == request.template_id,
            Field.profile_field_mapping.isnot(None)
        ).all()
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π —Å –º–∞–ø–ø–∏–Ω–≥–æ–º –ø—Ä–æ—Ñ–∏–ª—è: {len(fields)}")
        for field in fields:
            print(f"   –ü–æ–ª–µ: {field.name} -> {field.profile_field_mapping}")
            print(f"   –ü—Ä–∏ –ø–æ–¥–∞—á–µ: {field.update_profile_on_submit}")
            print(f"   –ü—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏: {field.update_profile_on_approve}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
        profile = db.query(UserProfile).filter(UserProfile.user_id == request.author_id).first()
        if profile:
            print(f"\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω:")
            print(f"   INN: {profile.inn}")
        else:
            print(f"\n‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {request.author_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏...")
        service = ProfileUpdateService(db)
        result = service.update_profile_on_approve(request.id)
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   –£—Å–ø–µ—à–Ω–æ: {result.get('success')}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ–π: {result.get('total_updated', 0)}")
        print(f"   –ü–æ–ª—è: {result.get('updated_fields', [])}")
        
        if result.get('errors'):
            print(f"   –û—à–∏–±–∫–∏: {result.get('errors')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if profile:
            db.refresh(profile)
            print(f"\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            print(f"   INN: {profile.inn}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
    
    finally:
        db.close()

if __name__ == "__main__":
    test_profile_update() 