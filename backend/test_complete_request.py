#!/usr/bin/env python3
"""–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ API"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.models.request import Request, RequestStatus
from app.models.user_profile import UserProfile
from app.schemas.request import RequestUpdate
from app.api.requests import update_request
from app.dependencies import UserInfo
from sqlalchemy.orm import Session

async def test_complete_request():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ API update_request"""
    
    db: Session = next(get_db())
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –∑–∞—è–≤–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        request = db.query(Request).filter(
            Request.status == RequestStatus.APPROVED.value
        ).first()
        
        if not request:
            print("‚ùå –ù–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Å—Ç–∞—Ç—É—Å–µ APPROVED –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—É—é –∑–∞—è–≤–∫—É –∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë —Å—Ç–∞—Ç—É—Å
            request = db.query(Request).filter(Request.id == 18).first()
            if request:
                request.status = RequestStatus.APPROVED.value
                db.commit()
                print(f"‚úÖ –ó–∞—è–≤–∫–∞ {request.id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ –≤ —Å—Ç–∞—Ç—É—Å APPROVED –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            else:
                print("‚ùå –ó–∞—è–≤–∫–∞ —Å ID=18 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return
        
        print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏:")
        print(f"   ID: {request.id}")
        print(f"   –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {request.status}")
        print(f"   –ê–≤—Ç–æ—Ä: {request.author_id}")
        print(f"   –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {request.form_data}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        profile = db.query(UserProfile).filter(UserProfile.user_id == request.author_id).first()
        old_inn = profile.inn if profile else None
        print(f"   –¢–µ–∫—É—â–∏–π INN –≤ –ø—Ä–æ—Ñ–∏–ª–µ: {old_inn}")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
        request_update = RequestUpdate(status=RequestStatus.COMPLETED.value)
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è)
        current_user = UserInfo(
            id=request.assignee_id or request.author_id,  # –ï—Å–ª–∏ –Ω–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –±–µ—Ä–µ–º –∞–≤—Ç–æ—Ä–∞
            email="test@test.ru",
            first_name="Test",
            last_name="User",
            middle_name=None,
            roles=["admin"],  # –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∞—Ç—å –ª—é–±—ã–µ –∑–∞—è–≤–∫–∏
            is_active=True,
            is_verified=True
        )
        
        print(f"\nüîÑ –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ update_request API...")
        
        # –í—ã–∑—ã–≤–∞–µ–º API —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é
        updated_request = await update_request(
            request_id=request.id,
            request_update=request_update,
            db=db,
            current_user=current_user
        )
        
        print(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:")
        print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {updated_request.status}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        db.refresh(profile)
        new_inn = profile.inn if profile else None
        print(f"   –ù–æ–≤—ã–π INN –≤ –ø—Ä–æ—Ñ–∏–ª–µ: {new_inn}")
        
        if old_inn != new_inn:
            print(f"üéâ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: {old_inn} -> {new_inn}")
        else:
            print(f"‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
    
    finally:
        db.close()

if __name__ == "__main__":
    import asyncio
    asyncio.run(test_complete_request()) 