#!/usr/bin/env python3
"""–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–§–ò–û, –ø–æ—á—Ç–∞)"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.models.request_template import RequestTemplate
from app.models.field import Field, FieldType
from app.models.user import User
from app.services.profile_update_service import ProfileUpdateService
from sqlalchemy.orm import Session

def test_user_fields_update():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users"""
    
    db: Session = next(get_db())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏
        template = RequestTemplate(
            name="–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –§–ò–û",
            description="–¢–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            routing_type="manual",
            auto_assign_enabled=False,
            deadline_days=7,
            is_active=True
        )
        db.add(template)
        db.flush()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω: {template.name} (ID: {template.id})")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è —à–∞–±–ª–æ–Ω–∞, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_fields = [
            {
                "name": "new_first_name",
                "label": "–ù–æ–≤–æ–µ –∏–º—è", 
                "profile_mapping": "first_name",
                "update_on_approve": True
            },
            {
                "name": "new_last_name",
                "label": "–ù–æ–≤–∞—è —Ñ–∞–º–∏–ª–∏—è",
                "profile_mapping": "last_name", 
                "update_on_approve": True
            },
            {
                "name": "new_email",
                "label": "–ù–æ–≤—ã–π email",
                "profile_mapping": "email",
                "update_on_submit": True
            }
        ]
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø–æ–ª—è text
        field_type = db.query(FieldType).filter(FieldType.name == "text").first()
        if not field_type:
            field_type = FieldType(
                name="text",
                input_type="text",
                validation_rules={}
            )
            db.add(field_type)
            db.flush()
        
        fields = []
        for field_data in test_fields:
            field = Field(
                template_id=template.id,
                name=field_data["name"],
                label=field_data["label"],
                field_type_id=field_type.id,
                is_required=False,
                is_visible=True,
                sort_order=len(fields),
                profile_field_mapping=field_data["profile_mapping"],
                update_profile_on_submit=field_data.get("update_on_submit", False),
                update_profile_on_approve=field_data.get("update_on_approve", False)
            )
            db.add(field)
            fields.append(field)
        
        db.flush()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª–µ–π: {len(fields)}")
        for field in fields:
            print(f"   ‚Ä¢ {field.name} -> {field.profile_field_mapping} (–Ω–∞ {'–ø–æ–¥–∞—á–µ' if field.update_profile_on_submit else '–∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏'})")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.id == 1).first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID=1 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        print(f"   –¢–µ–∫—É—â–µ–µ –§–ò–û: {user.first_name} {user.last_name}")
        print(f"   –¢–µ–∫—É—â–∏–π email: {user.email}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        form_data = {
            "new_first_name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
            "new_last_name": "–¢–µ—Å—Ç–æ–≤", 
            "new_email": "aleksandr.testov@melgu.ru"
        }
        
        print(f"\nüìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {form_data}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–¥–∞—á–µ
        profile_service = ProfileUpdateService(db)
        
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏...")
        submit_fields = [f for f in fields if f.update_profile_on_submit]
        result = profile_service._update_profile_fields(user.id, submit_fields, form_data, "submit")
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–¥–∞—á–µ:")
        print(f"   –£—Å–ø–µ—à–Ω–æ: {result.get('success')}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ–π: {result.get('total_updated', 0)}")
        for field_update in result.get('updated_fields', []):
            print(f"      ‚Ä¢ {field_update['field_label']} ({field_update['table']}): {field_update['old_value']} -> {field_update['new_value']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.refresh(user)
        print(f"\nüìä –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–¥–∞—á–µ:")
        print(f"   –§–ò–û: {user.first_name} {user.last_name}")
        print(f"   Email: {user.email}")
        
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏...")
        approve_fields = [f for f in fields if f.update_profile_on_approve]
        result = profile_service._update_profile_fields(user.id, approve_fields, form_data, "approve")
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏:")
        print(f"   –£—Å–ø–µ—à–Ω–æ: {result.get('success')}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ–π: {result.get('total_updated', 0)}")
        for field_update in result.get('updated_fields', []):
            print(f"      ‚Ä¢ {field_update['field_label']} ({field_update['table']}): {field_update['old_value']} -> {field_update['new_value']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.refresh(user)
        print(f"\nüéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   –§–ò–û: {user.first_name} {user.last_name}")
        print(f"   Email: {user.email}")
        
        # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã —Ç–µ—Å—Ç–æ–≤
        db.rollback()
        print(f"\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ë–î")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        db.rollback()
    
    finally:
        db.close()

if __name__ == "__main__":
    test_user_fields_update() 