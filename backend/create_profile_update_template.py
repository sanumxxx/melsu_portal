#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∑–∞—è–≤–∫–∏ "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"
—Å –ø–æ–ª—è–º–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∏ –∫–∞—Ñ–µ–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.models.request_template import RequestTemplate
from app.models.field import Field, FieldType
from sqlalchemy.orm import Session

def create_profile_update_template():
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    
    db: Session = next(get_db())
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω
        existing_template = db.query(RequestTemplate).filter(
            RequestTemplate.name == "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"
        ).first()
        
        if existing_template:
            print(f"‚úÖ –®–∞–±–ª–æ–Ω '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_template.id})")
            return existing_template.id
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏
        template = RequestTemplate(
            name="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è",
            description="–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ —Å—Ç—É–¥–µ–Ω—Ç–∞",
            is_active=True,
            auto_assign_enabled=True,
            default_assignees=[1],  # ID –∞–¥–º–∏–Ω–∞
            deadline_days=3,
            routing_type="auto_assign"
        )
        
        db.add(template)
        db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID —à–∞–±–ª–æ–Ω–∞
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏: {template.name} (ID: {template.id})")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø—ã –ø–æ–ª–µ–π
        faculty_select_type = db.query(FieldType).filter(FieldType.name == "faculty_select").first()
        department_select_type = db.query(FieldType).filter(FieldType.name == "department_select").first()
        text_type = db.query(FieldType).filter(FieldType.name == "text").first()
        
        if not faculty_select_type:
            print("‚ùå –¢–∏–ø –ø–æ–ª—è 'faculty_select' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
            
        if not department_select_type:
            print("‚ùå –¢–∏–ø –ø–æ–ª—è 'department_select' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
            
        if not text_type:
            print("‚ùå –¢–∏–ø –ø–æ–ª—è 'text' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
        fields = [
            {
                "name": "faculty",
                "label": "–§–∞–∫—É–ª—å—Ç–µ—Ç",
                "description": "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∞–∫—É–ª—å—Ç–µ—Ç",
                "field_type_id": faculty_select_type.id,
                "is_required": True,
                "sort_order": 1,
                "profile_field_mapping": "faculty",
                "update_profile_on_approve": True
            },
            {
                "name": "department", 
                "label": "–ö–∞—Ñ–µ–¥—Ä–∞",
                "description": "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –∫–∞—Ñ–µ–¥—Ä—É",
                "field_type_id": department_select_type.id,
                "is_required": True,
                "sort_order": 2,
                "profile_field_mapping": "department",
                "update_profile_on_approve": True
            },
            {
                "name": "reason",
                "label": "–ü—Ä–∏—á–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
                "description": "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è",
                "field_type_id": text_type.id,
                "is_required": True,
                "sort_order": 3,
                "profile_field_mapping": None,
                "update_profile_on_approve": False
            }
        ]
        
        for field_data in fields:
            field = Field(
                template_id=template.id,
                **field_data
            )
            db.add(field)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª–µ: {field_data['label']}")
        
        db.commit()
        print(f"\nüéâ –®–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏ '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"   - ID —à–∞–±–ª–æ–Ω–∞: {template.id}")
        print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π: {len(fields)}")
        print(f"   - –ü–æ–ª—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ—Ñ–∏–ª—è: faculty, department")
        print(f"   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç: –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏")
        
        return template.id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {str(e)}")
        db.rollback()
        return None
    finally:
        db.close()

if __name__ == "__main__":
    create_profile_update_template() 