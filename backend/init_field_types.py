#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞—è–≤–æ–∫.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.models.field import FieldType
from sqlalchemy.orm import Session

def init_field_types():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –ø–æ–ª–µ–π"""
    
    db: Session = next(get_db())
    
    # –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –ø–æ–ª–µ–π
    field_types = [
        {
            "name": "text",
            "label": "–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ",
            "description": "–û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞",
            "input_type": "text",
            "has_options": False
        },
        {
            "name": "textarea",
            "label": "–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç",
            "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞",
            "input_type": "textarea",
            "has_options": False
        },
        {
            "name": "number",
            "label": "–ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ",
            "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —á–∏—Å–µ–ª",
            "input_type": "number",
            "has_options": False
        },
        {
            "name": "email",
            "label": "Email",
            "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ email –∞–¥—Ä–µ—Å–∞",
            "input_type": "email",
            "has_options": False
        },
        {
            "name": "phone",
            "label": "–¢–µ–ª–µ—Ñ–æ–Ω",
            "description": "–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            "input_type": "tel",
            "has_options": False
        },
        {
            "name": "date",
            "label": "–î–∞—Ç–∞",
            "description": "–ü–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã",
            "input_type": "date",
            "has_options": False
        },
        {
            "name": "select",
            "label": "–í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫",
            "description": "–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞",
            "input_type": "select",
            "has_options": True
        },
        {
            "name": "radio",
            "label": "–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏",
            "description": "–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π",
            "input_type": "radio",
            "has_options": True
        },
        {
            "name": "checkbox",
            "label": "–§–ª–∞–∂–∫–∏",
            "description": "–í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
            "input_type": "checkbox",
            "has_options": True
        },
        {
            "name": "file",
            "label": "–§–∞–π–ª",
            "description": "–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞",
            "input_type": "file",
            "has_options": False
        },
        {
            "name": "faculty_select",
            "label": "–í—ã–±–æ—Ä —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞",
            "description": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤",
            "input_type": "select",
            "has_options": True
        },
        {
            "name": "department_select",
            "label": "–í—ã–±–æ—Ä –∫–∞—Ñ–µ–¥—Ä—ã",
            "description": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ñ–µ–¥—Ä",
            "input_type": "select",
            "has_options": True
        }
    ]
    
    try:
        created_count = 0
        updated_count = 0
        
        for field_type_data in field_types:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–∏–ø
            existing = db.query(FieldType).filter(
                FieldType.name == field_type_data["name"]
            ).first()
            
            if existing:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
                for key, value in field_type_data.items():
                    if key != "name":  # –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–º—è
                        setattr(existing, key, value)
                updated_count += 1
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–∏–ø –ø–æ–ª—è: {field_type_data['name']}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
                field_type = FieldType(**field_type_data)
                db.add(field_type)
                created_count += 1
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø –ø–æ–ª—è: {field_type_data['name']}")
        
        db.commit()
        
        print(f"\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"   - –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤: {created_count}")
        print(f"   - –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {updated_count}")
        print(f"   - –í—Å–µ–≥–æ —Ç–∏–ø–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {created_count + updated_count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π: {str(e)}")
        db.rollback()
        return False
    finally:
        db.close()

if __name__ == "__main__":
    init_field_types() 